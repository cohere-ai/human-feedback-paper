{
    "port": 9001,

    "server_name": "potato annotator",

    "annotation_task_name": "Match finding",

    # Potato will write the annotation file for all annotations to this
    # directory, as well as per-annotator output files and state information
    # necessary to restart annotation.
    "output_annotation_dir": "projects/match_finding_likert/annotation_output/pilot/",

    # The output format for the all-annotator data. Allowed formats are:
    # * jsonl
    # * json (same output as jsonl)
    # * csv
    # * tsv
    #
    "output_annotation_format": "tsv",

    # If annotators are using a codebook, this will be linked at the top to the
    # instance for easy access
    "annotation_codebook_url": "",

    "data_files": [
       "projects/match_finding_likert/data_files/pilot_data.csv"
    ],

    "item_properties": {
        "id_key": "id",
        "text_key": "text",
    },

  #list_as_text is used when the input text is actually a list of texts, usually used for best-worst-scaling
    "list_as_text": {
      "text_list_prefix_type": 'None',
      "horizontal": True,
    },

    "user_config": {

      "allow_all_users": True,

      "users": [  ],
    },

    #password requirement will be removed if this is added, the associated function is still under development
    "require_no_password": True,

    #the jumping-to-id function will be disabled if "jumping_to_id_disabled" is True
    "jumping_to_id_disabled": False,

  #the navigation bar will be hidden to the annotators if "hide_navbar" is True
    "hide_navbar": True,

  # define the surveyflow of the system, set up the pages before and after the data annotation page
    "surveyflow": {
      "on": True,
      #"order" : ['pre_annotation', 'prestudy_passed', 'prestudy_failed', 'post_annotation'],
      "order" : ['pre_annotation', 'post_annotation'],
      "pre_annotation": ['projects/match_finding_likert/surveyflow/introduction.jsonl', 'projects/match_finding_likert/surveyflow/1_Completely_different.jsonl','projects/match_finding_likert/surveyflow/2_Mostly_different.jsonl',
                         'projects/match_finding_likert/surveyflow/3_Somewhat_similar.jsonl','projects/match_finding_likert/surveyflow/4_Mostly_the_same.jsonl','projects/match_finding_likert/surveyflow/5_Completely_the_same.jsonl',
                         'projects/match_finding_likert/surveyflow/consent.jsonl', 'projects/match_finding_likert/surveyflow/instruction.jsonl'],
      "prestudy_passed": ['projects/match_finding_likert/surveyflow/prestudy_pass.jsonl'],
      "prestudy_failed": ['projects/match_finding_likert/surveyflow/prestudy_fail.jsonl'],
      "post_annotation": ['projects/match_finding_likert/surveyflow/experience.jsonl', 'projects/match_finding_likert/surveyflow/end.jsonl'],
      # If set, we will automatically generate testing questions similar to the annotation instances, but explicitly ask the annotator to choose one option
      "testing": ['projects/match_finding_likert/surveyflow/testing.jsonl'],
    },

    "prestudy": {
        "on": False,
        "minimum_score": 0.8,
        "groundtruth_key": 'whether_match',
        "question_key": 'Whether the presented sentences are discussing the same scientific finding',
        "answer_mapping": {'Yes': True, 'No': False},
        "pass_page": 'projects/match_finding_likert/surveyflow/prestudy_pass.jsonl',
        "fail_page": 'projects/match_finding_likert/surveyflow/prestudy_fail.jsonl'
    },


    "automatic_assignment": {
      #whether do automatic task assignment for annotators, default False.
      "on": True,
      "output_filename": 'task_assignment.json',
      "sampling_strategy:": 'random',
      "labels_per_instance": 5,
      "instance_per_annotator": 50,
      "test_question_per_annotator": 0, # you must set up the test question in surveyflow to use this function

      "users": [  ],
    },


    # How many seconds do you want the annotators spend on each instance, after
    # that, an alert will be sent per alert_time_each_instance seconds.
    "alert_time_each_instance": 10000000,
    "horizontal_key_bindings": true,

    "annotation_schemes": [
        {
            "annotation_type": "likert",
            "name": "The information conveyed in the findings is",
            "description": "The information conveyed in the findings is",
            "labels": [
            { "name": "Completely different",
              "tooltip": "Sentences in this category have findings which convey completely different information",
              "key_value": '1'
            },
            {
              "name": "Mostly different",
              "tooltip": "The findings may talk about the same topic, but the actual information is mostly different; for example, these sentences convey mostly different information even though they talk about the same topic",
              "key_value": '2'
            },

            { "name": "Somewhat similar",
              "tooltip": "The findings are discussing relevant research outputs but there are some differences in the overall information conveyed",
              "key_value": '3'
            },

            { "name": "Mostly the same",
              "tooltip": "two sentences are describing the mostly the same information but at different levels of generality, or one could support the other",
              "key_value": '4'
            },
            { "name": "Completely the same",
              "tooltip": "complete overlap in the information in the findings conveyed by the two sentences",
              "key_value": '5'
            }
            ],

            # If true, the field will have an optional text box the user can
            'has_free_response': {
               "instruction": 'Comments (optional):',
            },

            "displaying_score": True,

            # adding requirements for labels, when "required" is True, the annotators will be asked to finish the current instance to proceed
            "label_requirement": {"required":True},

            # If true, numbers [1-len(labels)] will be bound to each
            # label. Aannotations with more than 10 are not supported with this
            # simple keybinding and will need to use the full item specification
            # to bind all labels to keys.
            #"sequential_key_binding": True,
        },
    ],

    # The html that changes the visualiztation for your task. Change this file
    # to influence the layout and description of your task. This is not a full
    # HTML page, just the piece that does lays out your task's pieces
    #"html_layout": "templates/examples/fixed_keybinding_layout.html",
    "html_layout": "projects/match_finding_likert/templates/layout.html",

    # The core UI files for Potato. You should not need to change these normally.
    #
    # Exceptions to this might include:
    # 1) You want to add custom CSS/fonts to style your task
    # 2) Your layout requires additional JS/assets to render
    # 3) You want to support additional keybinding magic
    #
    "base_html_template": "templates/base_template.html",
    "header_file": "templates/header.html",

    # This is where the actual HTML files will be generated
    "site_dir": "potato/templates/",

}
